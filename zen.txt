ZEN SYSTEM TASK 

1.	users
2.	codekata
3.	attendance
4.	topics
5.	tasks
6.	company_drives
7.	mentors


import express from "express";
import { MongoClient } from "mongodb";
import dotenv from "dotenv";
dotenv.config();

const app = express();
const PORT = 1515;


app.use(express.json()); 

const MONGO_URL = process.env.MONGO_URL;

async function createConnection() {
  const client = new MongoClient(MONGO_URL);
  await client.connect();
  console.log("Mongodb is connected ");
  return client;
}

const client = await createConnection();


app.post("/zendata", async function(req, res) {
  const data = req.body;
  const result = await client.db("zenportal").collection("users").insertMany(data);
  res.send(result);
});



//Create database
//use zen_class;

# Create collection and insert data – “USERS”
db.users.insertMany([
    {
        userid: 1,
        name: "Steve",
        email: "Steve@gmail.com", 
    },
     {
        userid: 2,
        name: "Tommy",
        email: "Tommy@gmail.com",
    },
     {
        userid: 3,
        name: "Robert",
        email: "Robert@gmail.com",
    },
]);

# Create collection and insert data – “CODEKATA”
    db.codekata.insertMany([
    {
        userid: 1,
        title:"Array"
        problems: 50,
        solved:20
    },
     {
        userid: 2,
        title:"Strings"
        problems: 30,
        solved:10
    },
     {
        userid: 3,
        title:"Onjects"
        problems: 70,
        solved:30
    },
])

# Create collection and insert data – “TOPICS”
db.topics.insertMany([
    {   
        topicid: 1,
        topic: "HTML",
        topic_created: new Date("18-oct-2020")
    },
     {
         topicid: 2,
        topic: "CSS",
        topic_created: new Date("28-oct-2020")
    },
     {
         topicid: 3,
        topic: "JavaScript",
        topic_created: new Date("05-nov-2020")
    },
])

# Create collection and insert data – “TASKS”
    db.tasks.insertMany([
    {
        taskid: 1,
        topicid: 1,
        userid: 1,
        task: "HTML Task",
        due_date: new Date("18-oct-2020"),
        submitted: true
    },
    {
        taskid: 2,
        topicid: 2,
        userid: 2,
        task: "CSS Task",
        due_date: new Date("28-oct-2020"),
        submitted: true
    },
     {
        taskid: 3,
        topicid: 3,
        userid: 3,
        task: "Javascript Task",
        due_date: new Date("05-oct-2020"),
        submitted: false
    },
])

# Create collection and insert data – “ATTENDANCE”      
db.attendance.insertMany([
    {
        userid: 1,
        topicid: 2,
        attended: true
    },
  
   {
        userid: 2,
        topicid: 1,
        attended: true
    },
     {
        userid: 3,
        topicid: 5,
        attended: false
    },
])

# Create collection and insert data – “MENTORS”    
db.mentors.insertMany([
    {
        mentorid: 1,
        mentorname: "Hari",
        mentor_email:"Hari@gmail.com",
        class_count: 20
    },
      {
        mentorid: 2,
        mentorname: "Manoj",
        mentor_email: "manoj@gmail.com",
        class_count: 18
    },
      {
        mentorid: 3,
        mentorname: "Sakthi",
        mentor_email: "sakthi@gmail.com",
        class_count: 30
    },
])

# Create collection and insert data – “COMPANY DRIVES”
      db.comapanydrives.insertMany([
    {
        userid: 1,
        drive_date: new Date("20-oct-2020"),
        company: "Apple",
        attended:true
    },
   
  {
        userid: 1,
        drive_date: new Date("22-oct-2020"),
        company: "Amazon",
        attended:true
    },
     {
        userid: 2,
        drive_date: new Date("25-oct-2020"),
        company: "TCS",
        attended:false
    },
     {
        userid: 3,
        drive_date: new Date("30-oct-2020"),
        company: "Flipkart",
        attended:true
    },
])

1. Find all the topics and tasks which are thought in the month of October
db.topics.aggregate([
    {
        $lookup:{
            from:"tasks", // collection name to join,
            localField:'topicid',
            foreignField:'taskid',
            as:'outputinfo'
        }
    },
    {
                $match: {$and: [{$or: [{topic_date: {$gt: new Date("30-sep-2020")}},{topic_date: {$lt: new Date("1-nov-2020")}}]},
          {$or: [{"taskinfo.due_date": {$gt: new Date("30-sep-2020")}},{"taskinfo.due_date": {$lt: new Date("1-nov-2020")}}]}
        ]}

    }
])


2. Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020
db.companydrives.find({$and:[{drive_date:{$gte:new Date("15-Oct-2020")}},{drive_date:{$lte:new Date("31-Oct-2020")}}]})

3.Find all the company drives and students who are appeared for the placement.
db.companydrives.find({$attended:{$eq:true}})


4.Find the number of problems solved by the user in codekata
db.codekata.find({projection:{$solved:1}})


5. Find all the mentors with who has the mentee's count more than 15
db.mentors.find({class_count:{$gt:15}})


6.Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020
db.tasks.find({$and:[{due_date:{$gte:new Date("15-Oct-2020")}},{due_date:{$lte:new Date("31-Oct-2020")}}]})


app.listen(PORT, () => console.log(`App started in ${PORT}`));